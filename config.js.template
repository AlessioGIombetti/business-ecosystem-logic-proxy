var config = {};

// The PORT used by 
config.port = 80;

// Set this var to undefined if you don't want the server to listen on HTTPS
config.https = {
    enabled: false,
    certFile: 'cert/cert.crt',
    keyFile: 'cert/key.key',
    caFile: 'cert/ca.crt',
    port: 443
};

// Express configuration
config.proxyPrefix = '';
config.portalPrefix = '';
config.logInPath = '/login';
config.logOutPath = '/logOut';
config.sessionSecret = 'keyboard cat';

// OAuth2 configuration
config.oauth2 = {
    'server': 'https://account.lab.fiware.org',
    'clientID': '--client-id--',
    'clientSecret': '--client-secret--',
    'callbackURL': '--callback-url--',
    'roles': {
        'admin': 'provider',
        'customer': 'customer',
        'seller': 'seller'
    }
}

// Customer Role Required to buy items
config.customerRoleRequired = false;

// MongoDB
config.mongoDb = {
    server: 'localhost',
    port: 27017,
    user: '',
    password: '',
    db: 'belp'
};

// TMForum APIs final paths
config.appHost = '';

// Configure endpoints
config.endpoints = {
    'catalog': {
        'path': 'DSProductCatalog',
        'port': '8080'
    },
    'ordering': {
         'path': 'DSProductOrdering',
         'port': '8080'
    },
    'inventory': {
        'path': 'DSProductInventory',
        'port': '8080'
    },
    'charging': {
        'path': 'charging',
        'port': '8006'
    },
    'rss': {
        'path': 'DSRevenueSharing',
        'port': '8080'
    },
    'party': {
        'path': 'DSPartyManagement',
        'port': '8080'
    },
    'billing':{
        'path': 'DSBillingManagement',
        'port': '8080'
    },
    'customer': {
        'path': 'DSCustomerManagement',
        'port': '8080'
    },
    'usage':  {
        'path': 'DSUsageManagement',
        'port': '8080'
    }
};

// Percentage of the generated revenues that belongs to the system
config.revenueModel = 30;

// Billing Account owner role
config.billingAccountOwnerRole = 'bill receiver';

// Use true if the app server listens in https
config.appSsl = false;

// list of paths that will not check authentication/authorization
// example: ['/public/*', '/static/css/']
config.publicPaths = [];

config.magicKey = undefined;

config.usageChartURL = 'https://mashup.lab.fiware.org/fdelavega/UsageChart?mode=embedded&theme=wirecloud.fiwarelabtheme';

module.exports = config;
