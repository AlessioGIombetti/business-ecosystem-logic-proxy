/* Copyright (c) 2015 - 2016 CoNWeT Lab., Universidad Polit√©cnica de Madrid
 *
 * This file belongs to the business-ecosystem-logic-proxy of the
 * Business API Ecosystem
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var nock = require ('nock'),
    proxyquire = require('proxyquire'),
    testUtils = require('../utils');


fdescribe('Party lib', function () {

    var config = testUtils.getDefaultConfig();

    var getPartyLib = function() {
	return proxyquire('../../lib/party', {
	    '../config': config,
	    './utils': {
		getAPIURL: function (appSsl, host, port, path) {
		    return 'http://' + host + ':' + port + '/' + path;
		}
	    }
	}).party;
    };

    var headers = {
        'content-type': 'application/json',
        'accept': 'application/json'
    };

    describe('Party API', function () {

	it ('makePartyRequest should return error fields', function (done) {

	    req = nock('http://party.com:74', {
		reqheaders: headers
	    })
		.get('/party')
		.reply(500, {
		    statusCode: 500,
		    message: 'An error occurred during request'
		})
	    party = getPartyLib('party',
				null,
				'GET',
				'An error occurred during request',
				(err, res) => {
				    expect(err).not.toBe(null);
				    done();
				    
	    })
	    
	});
    });
});
